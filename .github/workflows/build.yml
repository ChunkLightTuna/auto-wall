name: Build Auto-Wall

on:
  push:
    tags:
      - '*.*.*'  # Run when a version tag is pushed
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Update version number
      run: |
        # Get version from tag or use default for manual runs
        if ("${{ github.ref }}" -like "refs/tags/v*") {
          $VERSION = "${{ github.ref }}".Replace("refs/tags/v", "")
        } else {
          $VERSION = "1.0.0"
        }
        echo "Setting version to $VERSION"
        
        # Update version in auto_wall.py
        $FILE = "auto_wall.py"
        $CONTENT = Get-Content -Path $FILE -Raw
        $NEW_CONTENT = $CONTENT -replace 'APP_VERSION = ".*"', "APP_VERSION = ""$VERSION"""
        Set-Content -Path $FILE -Value $NEW_CONTENT -Force
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller --no-cache-dir
    
    - name: Build with PyInstaller
      run: |
        pyinstaller --clean --noconfirm Auto-Wall.spec
    
    - name: Create release ZIP
      run: |
        New-Item -ItemType Directory -Force -Path dist-package
        Copy-Item -Path "dist/*" -Destination "dist-package/" -Recurse
        Copy-Item -Path "README.md" -Destination "dist-package/" -ErrorAction SilentlyContinue
        Copy-Item -Path "LICENSE" -Destination "dist-package/" -ErrorAction SilentlyContinue
        Compress-Archive -Path "dist-package/*" -DestinationPath "Auto-Wall.zip" -Force
        
    - name: Create GitHub Release
      id: create_version_release
      uses: ncipollo/release-action@v1.16.0
      with:
        allowUpdates: false
        name: Release ${{ steps.get_version.outputs.version }}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: "./dist/module.json, ./dist/module.zip"
        tag: ${{ github.ref_name }}